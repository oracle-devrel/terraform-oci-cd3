# Copyright (c) 2024, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
############################
# Identity
# Policies - tfvars
# Allowed Values:
# compartment_id can be the ocid or the name of the compartment hierarchy delimited by double hiphens "--"
# Example : compartment_id = "ocid1.compartment.oc1..aaaaaaaahwwiefb56epvdlzfic6ah6jy3xf3c" or compartment_id = "Security--Prod" where "Security" is the parent of "Prod" compartment
# Sample import command for Policies:
# terraform import "module.iam-policies[\"<<policies terraform variable name>>\"].oci_identity_policy.policy" <<policy ocid>>
############################
policies = {
   AnnouncementReaders-Policy = {
        name        = "AnnouncementReaders-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing AnnouncementReaders group to audit tenancy."
        policy_statements = [ "allow group AnnouncementReaders to read announcements in tenancy" ,"allow group AnnouncementReaders to use cloud-shell in tenancy"  ]
   },
   AppDevAdmins-Policy = {
        name        = "AppDevAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing AppDevAdmins group to manage app development related services in compartment AppDev."
        policy_statements = [ "allow group AppDevAdmins to read all-resources in compartment AppDev" ,"allow group AppDevAdmins to manage functions-family in compartment AppDev" ,"allow group AppDevAdmins to manage api-gateway-family in compartment AppDev" ,"allow group AppDevAdmins to manage ons-family in compartment AppDev" ,"allow group AppDevAdmins to manage streams in compartment AppDev" ,"allow group AppDevAdmins to manage cluster-family in compartment AppDev" ,"allow group AppDevAdmins to manage alarms in compartment AppDev" ,"allow group AppDevAdmins to manage metrics in compartment AppDev" ,"allow group AppDevAdmins to manage logging-family in compartment AppDev" ,"allow group AppDevAdmins to manage instance-family in compartment AppDev" ,"allow group AppDevAdmins to manage volume-family in compartment AppDev where all{request.permission != 'VOLUME_BACKUP_DELETE', request.permission != 'VOLUME_DELETE', request.permission != 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group AppDevAdmins to manage object-family in compartment AppDev where all{request.permission != 'OBJECT_DELETE', request.permission != 'BUCKET_DELETE'}" ,"allow group AppDevAdmins to manage file-family in compartment AppDev where all{request.permission != 'FILE_SYSTEM_DELETE', request.permission != 'MOUNT_TARGET_DELETE', request.permission != 'EXPORT_SET_DELETE', request.permission != 'FILE_SYSTEM_DELETE_SNAPSHOT', request.permission != 'FILE_SYSTEM_NFSv3_UNEXPORT'}" ,"allow group AppDevAdmins to manage repos in compartment AppDev" ,"allow group AppDevAdmins to manage orm-stacks in compartment AppDev" ,"allow group AppDevAdmins to manage orm-jobs in compartment AppDev" ,"allow group AppDevAdmins to manage orm-config-source-providers in compartment AppDev" ,"allow group AppDevAdmins to read audit-events in compartment AppDev" ,"allow group AppDevAdmins to read work-requests in compartment AppDev" ,"allow group AppDevAdmins to manage bastion-session in compartment AppDev" ,"allow group AppDevAdmins to manage cloudevents-rules in compartment AppDev" ,"allow group AppDevAdmins to read instance-agent-plugins in compartment AppDev" ,"allow group AppDevAdmins to manage keys in compartment AppDev" ,"allow group AppDevAdmins to use key-delegate in compartment AppDev" ,"allow group AppDevAdmins to manage secret-family in compartment AppDev" ,"allow group AppDevAdmins to read virtual-network-family in compartment Network" ,"allow group AppDevAdmins to use subnets in compartment Network" ,"allow group AppDevAdmins to use network-security-groups in compartment Network" ,"allow group AppDevAdmins to use vnics in compartment Network" ,"allow group AppDevAdmins to manage private-ips in compartment Network" ,"allow group AppDevAdmins to use load-balancers in compartment Network" ,"allow group AppDevAdmins to use vaults in compartment Security" ,"allow group AppDevAdmins to manage instance-images in compartment Security" ,"allow group AppDevAdmins to read vss-family in compartment Security" ,"allow group AppDevAdmins to use bastion in compartment Security" ,"allow group AppDevAdmins to manage bastion-session in compartment Security" ,"allow group AppDevAdmins to read logging-family in compartment Security" ,"allow group AppDevAdmins to read autonomous-database-family in compartment Database" ,"allow group AppDevAdmins to read database-family in compartment Database" ,"allow group AppDevAdmins to read app-catalog-listing in tenancy" ,"allow group AppDevAdmins to read instance-images in tenancy" ,"allow group AppDevAdmins to read repos in tenancy"  ]
   },
   AuditorAccess-Policy = {
        name        = "AuditorAccess-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing Auditors group to audit tenancy."
        policy_statements = [ "allow group Auditors to inspect all-resources in tenancy" ,"allow group Auditors to read instances in tenancy" ,"allow group Auditors to read load-balancers in tenancy" ,"allow group Auditors to read buckets in tenancy" ,"allow group Auditors to read nat-gateways in tenancy" ,"allow group Auditors to read public-ips in tenancy" ,"allow group Auditors to read file-family in tenancy" ,"allow group Auditors to read instance-configurations in tenancy" ,"allow group Auditors to read network-security-groups in tenancy" ,"allow group Auditors to read resource-availability in tenancy" ,"allow group Auditors to read audit-events in tenancy" ,"allow group Auditors to use cloud-shell in tenancy" ,"allow group Auditors to read users in tenancy" ,"allow group Auditors to read vss-family in tenancy" ,"allow group Auditors to read usage-budgets in tenancy" ,"allow group Auditors to read usage-reports in tenancy" ,"allow group Auditors to read data-safe-family in tenancy"  ]
   },
   Basic-Access-Policy = {
        name        = "Basic-Access-Policy"
        compartment_id = "root"
        policy_description = "Policy to allow basic access"
        policy_statements = [ "allow group SecurityAdmins,NetworkAdmins,AppDevAdmins,DatabaseAdmins,StorageAdmins to use cloud-shell in tenancy" ,"allow group SecurityAdmins,NetworkAdmins,AppDevAdmins,DatabaseAdmins,StorageAdmins to read usage-budgets in tenancy" ,"allow group SecurityAdmins,NetworkAdmins,AppDevAdmins,DatabaseAdmins,StorageAdmins to read usage-reports in tenancy" ,"allow group SecurityAdmins,NetworkAdmins,AppDevAdmins,DatabaseAdmins,StorageAdmins to read objectstorage-namespaces in tenancy"  ]
   },
   CredentialAdmins-Policy = {
        name        = "CredentialAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy for Credential Admins group"
        policy_statements = [ "allow group CredAdmins to inspect users in tenancy" ,"allow group CredAdmins to inspect groups in tenancy" ,"allow group CredAdmins to manage users in tenancy  where any {request.operation = 'ListApiKeys',request.operation = 'ListAuthTokens',request.operation = 'ListCustomerSecretKeys',request.operation = 'UploadApiKey',request.operation = 'DeleteApiKey',request.operation = 'UpdateAuthToken',request.operation = 'CreateAuthToken',request.operation = 'DeleteAuthToken',request.operation = 'CreateSecretKey',request.operation = 'UpdateCustomerSecretKey',request.operation = 'DeleteCustomerSecretKey',request.operation = 'UpdateUserCapabilities'}" ,"allow group CredAdmins to use cloud-shell in tenancy"  ]
   },
   Managed-Services-Policy = {
        name        = "Managed-Services-Policy"
        compartment_id = "root"
        policy_description = "Policy for for OCI services: Cloud Guard, Vulnerability Scanning and OS Management."
        policy_statements = [ "allow service cloudguard to read all-resources in tenancy" ,"allow service cloudguard to use network-security-groups in tenancy" ,"Allow service vulnerability-scanning-service to manage instances in tenancy" ,"Allow service vulnerability-scanning-service to read compartments in tenancy" ,"Allow service vulnerability-scanning-service to read repos in tenancy" ,"Allow service vulnerability-scanning-service to read vnics in tenancy" ,"Allow service vulnerability-scanning-service to read vnic-attachments in tenancy" ,"allow service osms to read instances in tenancy" ,"Allow service blockstorage, oke, streaming, Fssoc1Prod to use keys in tenancy"  ]
   },
   DatabaseAdmins-Policy = {
        name        = "DatabaseAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing DatabaseAdmins group to manage databases in compartment Database."
        policy_statements = [ "allow group DatabaseAdmins to read all-resources in compartment Database" ,"allow group DatabaseAdmins to manage database-family in compartment Database" ,"allow group DatabaseAdmins to manage autonomous-database-family in compartment Database" ,"allow group DatabaseAdmins to manage cloud-exadata-infrastructures in compartment Database" ,"allow group DatabaseAdmins to manage cloud-vmclusters in compartment Database" ,"allow group DatabaseAdmins to manage alarms in compartment Database" ,"allow group DatabaseAdmins to manage metrics in compartment Database" ,"allow group DatabaseAdmins to manage cloudevents-rules in compartment Database" ,"allow group DatabaseAdmins to manage object-family in compartment Database where all{request.permission != 'OBJECT_DELETE', request.permission != 'BUCKET_DELETE'}" ,"allow group DatabaseAdmins to manage instance-family in compartment Database" ,"allow group DatabaseAdmins to manage volume-family in compartment Database where all{request.permission != 'VOLUME_BACKUP_DELETE', request.permission != 'VOLUME_DELETE', request.permission != 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group DatabaseAdmins to manage file-family in compartment Database where all{request.permission != 'FILE_SYSTEM_DELETE', request.permission != 'MOUNT_TARGET_DELETE', request.permission != 'EXPORT_SET_DELETE', request.permission != 'FILE_SYSTEM_DELETE_SNAPSHOT', request.permission != 'FILE_SYSTEM_NFSv3_UNEXPORT'}" ,"allow group DatabaseAdmins to manage orm-stacks in compartment Database" ,"allow group DatabaseAdmins to manage orm-jobs in compartment Database" ,"allow group DatabaseAdmins to manage orm-config-source-providers in compartment Database" ,"allow group DatabaseAdmins to manage ons-family in compartment Database" ,"allow group DatabaseAdmins to manage logging-family in compartment Database" ,"allow group DatabaseAdmins to read audit-events in compartment Database" ,"allow group DatabaseAdmins to read work-requests in compartment Database" ,"allow group DatabaseAdmins to manage bastion-session in compartment Database" ,"allow group DatabaseAdmins to read instance-agent-plugins in compartment Database" ,"allow group DatabaseAdmins to manage data-safe-family in compartment Database" ,"allow group DatabaseAdmins to use vnics in compartment Database" ,"allow group DatabaseAdmins to manage keys in compartment Database" ,"allow group DatabaseAdmins to use key-delegate in compartment Database" ,"allow group DatabaseAdmins to manage secret-family in compartment Database" ,"allow group DatabaseAdmins to read virtual-network-family in compartment Network" ,"allow group DatabaseAdmins to use vnics in compartment Network" ,"allow group DatabaseAdmins to manage private-ips in compartment Network" ,"allow group DatabaseAdmins to use subnets in compartment Network" ,"allow group DatabaseAdmins to use network-security-groups in compartment Network" ,"allow group DatabaseAdmins to read vss-family in compartment Security" ,"allow group DatabaseAdmins to use vaults in compartment Security" ,"allow group DatabaseAdmins to read logging-family in compartment Security" ,"allow group DatabaseAdmins to use bastion in compartment Security" ,"allow group DatabaseAdmins to manage bastion-session in compartment Security" ,"allow group DatabaseAdmins to manage db-nodes in compartment Database" ,"allow group DatabaseAdmins to manage db-homes in compartment Database" ,"allow group DatabaseAdmins to manage databases in compartment Database" ,"allow group DatabaseAdmins to manage db-backups in compartment Database" ,"allow group DatabaseAdmins to manage data-safe-family in compartment Database"  ]
   },
   IAMAdmins-Policy = {
        name        = "IAMAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing IAMAdmins group to manage IAM resources in tenancy, except changing Administrators group assignments."
        policy_statements = [ "allow group IAMAdmins to manage policies in tenancy" ,"allow group IAMAdmins to manage compartments in tenancy" ,"allow group IAMAdmins to inspect users in tenancy" ,"allow group IAMAdmins to manage users in tenancy where all {request.operation != 'ListApiKeys',request.operation != 'ListAuthTokens',request.operation != 'ListCustomerSecretKeys',request.operation != 'UploadApiKey',request.operation != 'DeleteApiKey',request.operation != 'UpdateAuthToken',request.operation != 'CreateAuthToken',request.operation != 'DeleteAuthToken',request.operation != 'CreateSecretKey',request.operation != 'UpdateCustomerSecretKey',request.operation != 'DeleteCustomerSecretKey'}" ,"allow group IAMAdmins to inspect groups in tenancy" ,"allow group IAMAdmins to read policies in tenancy" ,"allow group IAMAdmins to manage groups in tenancy where all {target.group.name != 'Administrators', target.group.name != 'CredAdmins'}" ,"allow group IAMAdmins to inspect identity-providers in tenancy" ,"allow group IAMAdmins to manage identity-providers in tenancy where any {request.operation = 'AddIdpgroupMapping', request.operation = 'DeleteIdpgroupMapping'}" ,"allow group IAMAdmins to manage dynamic-groups in tenancy" ,"allow group IAMAdmins to manage authentication-policies in tenancy" ,"allow group IAMAdmins to manage network-sources in tenancy" ,"allow group IAMAdmins to manage quota in tenancy" ,"allow group IAMAdmins to read audit-events in tenancy" ,"allow group IAMAdmins to use cloud-shell in tenancy" ,"allow group IAMAdmins to manage tag-defaults in tenancy" ,"allow group IAMAdmins to manage tag-namespaces in tenancy" ,"allow group IAMAdmins to manage orm-stacks in tenancy" ,"allow group IAMAdmins to manage orm-jobs in tenancy" ,"allow group IAMAdmins to manage orm-config-source-providers in tenancy"  ]
   },
   NetworkAdmins-Policy = {
        name        = "NetworkAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing NetworkAdmins group to manage virtual-network-family in compartment Network."
        policy_statements = [ "allow group NetworkAdmins to read all-resources in compartment Network" ,"allow group NetworkAdmins to manage virtual-network-family in compartment Network" ,"allow group NetworkAdmins to manage dns in compartment Network" ,"allow group NetworkAdmins to manage load-balancers in compartment Network" ,"allow group NetworkAdmins to manage alarms in compartment Network" ,"allow group NetworkAdmins to manage metrics in compartment Network" ,"allow group NetworkAdmins to manage ons-family in compartment Network" ,"allow group NetworkAdmins to manage orm-stacks in compartment Network" ,"allow group NetworkAdmins to manage orm-jobs in compartment Network" ,"allow group NetworkAdmins to manage orm-config-source-providers in compartment Network" ,"allow group NetworkAdmins to read audit-events in compartment Network" ,"allow group NetworkAdmins to read work-requests in compartment Network" ,"allow group NetworkAdmins to manage instance-family in compartment Network" ,"allow group NetworkAdmins to manage volume-family in compartment Network where all{request.permission != 'VOLUME_BACKUP_DELETE', request.permission != 'VOLUME_DELETE', request.permission != 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group NetworkAdmins to manage object-family in compartment Network where all{request.permission != 'OBJECT_DELETE', request.permission != 'BUCKET_DELETE'}" ,"allow group NetworkAdmins to manage file-family in compartment Network where all{request.permission != 'FILE_SYSTEM_DELETE', request.permission != 'MOUNT_TARGET_DELETE', request.permission != 'EXPORT_SET_DELETE', request.permission != 'FILE_SYSTEM_DELETE_SNAPSHOT', request.permission != 'FILE_SYSTEM_NFSv3_UNEXPORT'}" ,"allow group NetworkAdmins to manage bastion-session in compartment Network" ,"allow group NetworkAdmins to manage cloudevents-rules in compartment Network" ,"allow group NetworkAdmins to manage alarms in compartment Network" ,"allow group NetworkAdmins to manage metrics in compartment Network" ,"allow group NetworkAdmins to read instance-agent-plugins in compartment Network" ,"allow group NetworkAdmins to manage keys in compartment Network" ,"allow group NetworkAdmins to use key-delegate in compartment Network" ,"allow group NetworkAdmins to manage secret-family in compartment Network" ,"allow group NetworkAdmins to read vss-family in compartment Security" ,"allow group NetworkAdmins to use bastion in compartment Security" ,"allow group NetworkAdmins to manage bastion-session in compartment Security" ,"allow group NetworkAdmins to use vaults in compartment Security" ,"allow group NetworkAdmins to read logging-family in compartment Security"  ]
   },
   CostAdmins-Policy = {
        name        = "CostAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing CostAdmins group to manage costing."
        policy_statements = [ "define tenancy usage-report as ocid1.tenancy.oc1..aaaaaaaaned4fkpkisbwjlr56u7cj63lf3wffbilvqknstgtvzub7vhqkggq" ,"endorse group CostAdmins to read objects in tenancy usage-report" ,"allow group CostAdmins to manage usage-report in tenancy" ,"allow group CostAdmins to manage usage-budgets  in tenancy"  ]
   },
   SecurityAdmins-Policy = {
        name        = "SecurityAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing SecurityAdmins group to manage security related services in compartment Security."
        policy_statements = [ "allow group SecurityAdmins to manage tag-namespaces in tenancy" ,"allow group SecurityAdmins to manage tag-defaults in tenancy" ,"allow group SecurityAdmins to manage repos in tenancy" ,"allow group SecurityAdmins to read audit-events in tenancy" ,"allow group SecurityAdmins to read app-catalog-listing in tenancy" ,"allow group SecurityAdmins to read instance-images in tenancy" ,"allow group SecurityAdmins to inspect buckets in tenancy" ,"allow group SecurityAdmins to read all-resources in compartment Security" ,"allow group SecurityAdmins to manage instance-family in compartment Security" ,"allow group SecurityAdmins to manage volume-family in compartment Security where all{request.permission != 'VOLUME_BACKUP_DELETE', request.permission != 'VOLUME_DELETE', request.permission != 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group SecurityAdmins to manage object-family in compartment Security where all{request.permission != 'OBJECT_DELETE', request.permission != 'BUCKET_DELETE'}" ,"allow group SecurityAdmins to manage file-family in compartment Security where all{request.permission != 'FILE_SYSTEM_DELETE', request.permission != 'MOUNT_TARGET_DELETE', request.permission != 'EXPORT_SET_DELETE', request.permission != 'FILE_SYSTEM_DELETE_SNAPSHOT', request.permission != 'FILE_SYSTEM_NFSv3_UNEXPORT'}" ,"allow group SecurityAdmins to manage vaults in compartment Security" ,"allow group SecurityAdmins to manage keys in compartment Security" ,"allow group SecurityAdmins to manage secret-family in compartment Security" ,"allow group SecurityAdmins to manage logging-family in compartment Security" ,"allow group SecurityAdmins to manage serviceconnectors in compartment Security" ,"allow group SecurityAdmins to manage streams in compartment Security" ,"allow group SecurityAdmins to manage ons-family in compartment Security" ,"allow group SecurityAdmins to manage functions-family in compartment Security" ,"allow group SecurityAdmins to manage waas-family in compartment Security" ,"allow group SecurityAdmins to manage security-zone in compartment Security" ,"allow group SecurityAdmins to manage orm-stacks in compartment Security" ,"allow group SecurityAdmins to manage orm-jobs in compartment Security" ,"allow group SecurityAdmins to manage orm-config-source-providers in compartment Security" ,"allow group SecurityAdmins to manage vss-family in compartment Security" ,"allow group SecurityAdmins to read work-requests in compartment Security" ,"allow group SecurityAdmins to manage bastion-family in compartment Security" ,"allow group SecurityAdmins to read instance-agent-plugins in compartment Security" ,"allow group SecurityAdmins to manage cloudevents-rules in compartment Security" ,"allow group SecurityAdmins to manage alarms in compartment Security" ,"allow group SecurityAdmins to manage metrics in compartment Security" ,"allow group SecurityAdmins to use key-delegate in compartment Security" ,"allow group SecurityAdmins to read virtual-network-family in compartment Network" ,"allow group SecurityAdmins to use subnets in compartment Network" ,"allow group SecurityAdmins to use network-security-groups in compartment Network" ,"allow group SecurityAdmins to use vnics in compartment Network" ,"allow group SecurityAdmins to manage private-ips in compartment Network" ,"allow group SecurityAdmins to read keys in compartment Network" ,"allow group SecurityAdmins to read keys in compartment AppDev" ,"allow group SecurityAdmins to read keys in compartment Database" ,"allow group SecurityAdmins to manage cloudevents-rules in tenancy" ,"allow group SecurityAdmins to manage cloud-guard-family in tenancy" ,"allow group SecurityAdmins to read tenancies in tenancy" ,"allow group SecurityAdmins to read objectstorage-namespaces in tenancy" ,"allow group SecurityAdmins to use cloud-shell in tenancy" ,"allow group SecurityAdmins to read usage-budgets in tenancy" ,"allow group SecurityAdmins to read usage-reports in tenancy"  ]
   },
   StorageAdmins-Policy = {
        name        = "StorageAdmins-Policy"
        compartment_id = "root"
        policy_description = "Policy allowing StorageAdmins group to manage storage resources."
        policy_statements = [ "allow group StorageAdmins to read bucket in compartment AppDev" ,"allow group StorageAdmins to inspect object in compartment AppDev" ,"allow group StorageAdmins to manage object-family in compartment AppDev where any {request.permission = 'OBJECT_DELETE', request.permission = 'BUCKET_DELETE'}" ,"allow group StorageAdmins to read volume-family in compartment AppDev" ,"allow group StorageAdmins to manage volume-family in compartment AppDev where any {request.permission = 'VOLUME_DELETE', request.permission = 'VOLUME_BACKUP_DELETE', request.permission = 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group StorageAdmins to read file-family in compartment AppDev" ,"allow group StorageAdmins to manage file-family in compartment AppDev where any {request.permission = 'FILE_SYSTEM_DELETE', request.permission = 'MOUNT_TARGET_DELETE', request.permission = 'EXPORT_SET_UPDATE', request.permission = 'FILE_SYSTEM_NFSv3_UNEXPORT', request.permission = 'EXPORT_SET_DELETE', request.permission = 'FILE_SYSTEM_DELETE_SNAPSHOT'}" ,"allow group StorageAdmins to read bucket in compartment Database" ,"allow group StorageAdmins to inspect object in compartment Database" ,"allow group StorageAdmins to manage object-family in compartment Database where any {request.permission = 'OBJECT_DELETE', request.permission = 'BUCKET_DELETE'}" ,"allow group StorageAdmins to read volume-family in compartment Database" ,"allow group StorageAdmins to manage volume-family in compartment Database where any {request.permission = 'VOLUME_DELETE', request.permission = 'VOLUME_BACKUP_DELETE', request.permission = 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group StorageAdmins to read file-family in compartment Database" ,"allow group StorageAdmins to manage file-family in compartment Database where any {request.permission = 'FILE_SYSTEM_DELETE', request.permission = 'MOUNT_TARGET_DELETE', request.permission = 'EXPORT_SET_UPDATE', request.permission = 'FILE_SYSTEM_NFSv3_UNEXPORT', request.permission = 'EXPORT_SET_DELETE', request.permission = 'FILE_SYSTEM_DELETE_SNAPSHOT'}" ,"allow group StorageAdmins to read bucket in compartment Security" ,"allow group StorageAdmins to inspect object in compartment Security" ,"allow group StorageAdmins to manage object-family in compartment Security where any {request.permission = 'OBJECT_DELETE', request.permission = 'BUCKET_DELETE'}" ,"allow group StorageAdmins to read volume-family in compartment Security" ,"allow group StorageAdmins to manage volume-family in compartment Security where any {request.permission = 'VOLUME_DELETE', request.permission = 'VOLUME_BACKUP_DELETE', request.permission = 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group StorageAdmins to read file-family in compartment Security" ,"allow group StorageAdmins to manage file-family in compartment Security where any {request.permission = 'FILE_SYSTEM_DELETE', request.permission = 'MOUNT_TARGET_DELETE', request.permission = 'EXPORT_SET_UPDATE', request.permission = 'FILE_SYSTEM_NFSv3_UNEXPORT', request.permission = 'EXPORT_SET_DELETE', request.permission = 'FILE_SYSTEM_DELETE_SNAPSHOT'}" ,"allow group StorageAdmins to read bucket in compartment Network" ,"allow group StorageAdmins to inspect object in compartment Network" ,"allow group StorageAdmins to manage object-family in compartment Network where any {request.permission = 'OBJECT_DELETE', request.permission = 'BUCKET_DELETE'}" ,"allow group StorageAdmins to read volume-family in compartment Network" ,"allow group StorageAdmins to manage volume-family in compartment Network where any {request.permission = 'VOLUME_DELETE', request.permission = 'VOLUME_BACKUP_DELETE', request.permission = 'BOOT_VOLUME_BACKUP_DELETE'}" ,"allow group StorageAdmins to read file-family in compartment Network" ,"allow group StorageAdmins to manage file-family in compartment Network where any {request.permission = 'FILE_SYSTEM_DELETE', request.permission = 'MOUNT_TARGET_DELETE', request.permission = 'VNIC_DELETE', request.permission = 'SUBNET_DETACH', request.permission = 'VNIC_DETACH', request.permission = 'PRIVATE_IP_DELETE', request.permission = 'PRIVATE_IP_UNASSIGN', request.permission = 'VNIC_UNASSIGN', request.permission = 'EXPORT_SET_UPDATE', request.permission = 'FILE_SYSTEM_NFSv3_UNEXPORT', request.permission = 'EXPORT_SET_DELETE', request.permission = 'FILE_SYSTEM_DELETE_SNAPSHOT'}"  ]
   },
   OKE-Clusters-Policy = {
        name        = "OKE-Clusters-Policy"
        compartment_id = "root"
        policy_description = "Policy for OKE clusters. It allows OKE clusters to use Native Pod Networking (NPN) and to use network resources in the Network compartment."
        policy_statements = [ "allow any-user to manage instances in compartment AppDev where all { request.principal.type = 'cluster' }" ,"allow any-user to use private-ips in compartment Network where all { request.principal.type = 'cluster' }" ,"allow any-user to use network-security-groups in compartment Network where all { request.principal.type = 'cluster' }" ,"allow any-user to use subnets in compartment Network where all { request.principal.type = 'cluster' }"  ]
            },
 }